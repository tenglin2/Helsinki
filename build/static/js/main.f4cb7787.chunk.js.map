{"version":3,"sources":["components/Filter.js","components/AddContact.js","components/NumbersList.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","_ref","filter","handleFilterChange","react_default","a","createElement","className","value","onChange","AddContact","handleFormSubmit","newName","handleNameChange","newNumber","handleNumberChange","console","log","onSubmit","type","NumbersList","renderPersons","Notification","message","App","_React$useState","React","useState","name","number","_React$useState2","Object","slicedToArray","persons","setPersons","_React$useState3","_React$useState4","setNewName","_React$useState5","_React$useState6","setNewNumber","_React$useState7","_React$useState8","setFilter","_React$useState9","_React$useState10","errorMessage","setErrorMessage","useEffect","axios","get","then","response","data","catch","error","components_Notification","components_Filter","event","target","components_AddContact","preventDefault","i","length","window","confirm","concat","id","put","objectSpread","nameObject","post","setTimeout","components_NumbersList","person","includes","map","key","onClick","delete","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4cb7787.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = function({ filter, handleFilterChange }) {\r\n\treturn (\r\n\t\t<div className=\"Filter\">\r\n\t\t\tFilter Shown With: <input value={filter} onChange={handleFilterChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst AddContact = function({ handleFormSubmit, newName, handleNameChange, newNumber, handleNumberChange }) {\r\n\tconsole.log(newName, newNumber);\r\n\r\n\treturn (\r\n\t\t<div className=\"AddContact\">\r\n\t\t\t<h1>Add a New Contact</h1>\r\n\t\t\t<form onSubmit={handleFormSubmit}>\r\n\t\t\t\tName: <input value={newName} onChange={handleNameChange} />\r\n\t\t\t\tNumber: <input value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">Add New Contact</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nconst NumbersList = function({ renderPersons }) {\r\n\treturn (\r\n\t\t<div className=\"NumbersList\">\r\n\t\t\t<h2>Numbers List</h2>\r\n\t\t\t{renderPersons()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NumbersList;\r\n","import React from 'react';\r\n\r\nconst Notification = function({ message }) {\r\n\tif (message === null) {\r\n\t\tconsole.log('message is null');\r\n\t\treturn <h1>Something NONNULL</h1>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{message}</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport Filter from './Filter';\r\nimport AddContact from './AddContact';\r\nimport NumbersList from './NumbersList';\r\nimport Notification from './Notification';\r\nimport axios from 'axios';\r\n\r\nconst App = function() {\r\n\tconst [ persons, setPersons ] = React.useState([ { name: 'Arto Hellas', number: '040-1234567' } ]);\r\n\tconst [ newName, setNewName ] = React.useState('');\r\n\tconst [ newNumber, setNewNumber ] = React.useState('');\r\n\tconst [ filter, setFilter ] = React.useState('');\r\n\tconst [ errorMessage, setErrorMessage ] = React.useState(null);\r\n\r\n\tReact.useEffect(function() {\r\n\t\tconsole.log('effect runs only on initial render');\r\n\t\taxios\r\n\t\t\t.get('https://secret-cliffs-71597.herokuapp.com/api/persons')\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log('response is', response);\r\n\t\t\t\tconsole.log('response data is', response.data);\r\n\t\t\t\tsetPersons(response.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst handleNameChange = function(event) {\r\n\t\tconsole.log('name change trigger');\r\n\t\tsetNewName(event.target.value);\r\n\t};\r\n\r\n\tconst handleNumberChange = function(event) {\r\n\t\tconsole.log('number change trigger');\r\n\t\tsetNewNumber(event.target.value);\r\n\t};\r\n\r\n\tconst handleFilterChange = function(event) {\r\n\t\tconsole.log('filter change');\r\n\t\tsetFilter(event.target.value);\r\n\t};\r\n\r\n\tconst handleFormSubmit = function(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconsole.log('form submits');\r\n\r\n\t\t// Cannot add to phonebook if name is empty. Wait shouldn't I do a regex check on the number too? Sounds like a lot of work. /[0-9-]{9,15}/g\r\n\r\n\t\t// Prevent same names from being added. Cannot compare using the name object because you cannot compare different references in memory.\r\n\t\tfor (let i = 0; i < persons.length; i++) {\r\n\t\t\tif (persons[i].name === newName) {\r\n\t\t\t\t// Logic to change the phonenumber if name is already in phonebook\r\n\t\t\t\tif (window.confirm(`${newName} is already in phonebook, do you want to update the phonenumber?`)) {\r\n\t\t\t\t\tlet id = persons[i].id;\r\n\t\t\t\t\taxios\r\n\t\t\t\t\t\t.put(`https://secret-cliffs-71597.herokuapp.com/api/persons/${id}`, {\r\n\t\t\t\t\t\t\t...persons[i],\r\n\t\t\t\t\t\t\tnumber: newNumber\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tconsole.log('the put request response is', response);\r\n\t\t\t\t\t\t\tconsole.log('doing a get request to update the numbers list');\r\n\t\t\t\t\t\t\taxios\r\n\t\t\t\t\t\t\t\t.get('https://secret-cliffs-71597.herokuapp.com/api/persons')\r\n\t\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('response is', response);\r\n\t\t\t\t\t\t\t\t\tconsole.log('response data is', response.data);\r\n\t\t\t\t\t\t\t\t\tsetPersons(response.data);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tconsole.log('put error is', error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log('the updating was complete, now reseting the name and number fields');\r\n\t\t\t\t// alert(`${newName} is already added to the phonebook`);\r\n\t\t\t\tsetNewName('');\r\n\t\t\t\tsetNewNumber('');\r\n\t\t\t\treturn; // To prevent the rest of the code.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet nameObject = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber\r\n\t\t};\r\n\r\n\t\t// Push doesn't work probably because it mutates the state. You could probably do this with a spread operator.\r\n\t\tsetPersons(persons.concat(nameObject));\r\n\t\tsetNewName('');\r\n\t\tsetNewNumber('');\r\n\t\tconsole.log(persons);\r\n\r\n\t\t// We want to make a post request to the backend database that hardcodes the values. That means we need to change the db file.\r\n\t\taxios\r\n\t\t\t.post('https://secret-cliffs-71597.herokuapp.com/api/persons', nameObject)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log('response data is', response.data);\r\n\t\t\t\t// Does the db json file mutate automatically?\r\n\r\n\t\t\t\t// Here we are attemping to update the state using a get request synchronously after the post request. This should solve the undefined id problem.\r\n\t\t\t\tconsole.log('attempting to solve id problem');\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get('https://secret-cliffs-71597.herokuapp.com/api/persons')\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tconsole.log('response is', response);\r\n\t\t\t\t\t\tconsole.log('response data is', response.data);\r\n\t\t\t\t\t\tsetPersons(response.data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tsetErrorMessage(`Added ${nameObject.name}`);\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDeleteClick = function(id) {\r\n\t\tconsole.log('handling the deletion of a person', id);\r\n\r\n\t\tif (window.confirm('Are you sure you want to delete this fucker?')) {\r\n\t\t\taxios\r\n\t\t\t\t.delete(`https://secret-cliffs-71597.herokuapp.com/api/persons/${id}`)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log('delete response is', response);\r\n\t\t\t\t\t// Do the get request after deleting synchronously...\r\n\t\t\t\t\tconsole.log('now try the get request to update and trigger state change');\r\n\t\t\t\t\taxios\r\n\t\t\t\t\t\t.get('https://secret-cliffs-71597.herokuapp.com/api/persons')\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tconsole.log('response is', response);\r\n\t\t\t\t\t\t\tconsole.log('response data is', response.data);\r\n\t\t\t\t\t\t\tsetPersons(response.data);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log('error deleting the stuff', error);\r\n\r\n\t\t\t\t\tlet name;\r\n\r\n\t\t\t\t\t// Okay so the reasons I can't get a reference to the name for the error message is because it doesn't exist in the DB anymore. Which means I would have to somehow manipulate the dom element somehow and not the backend because it doesn't exist.\r\n\t\t\t\t\t// Solution to this could be getting the name before the deletion step!!!\r\n\t\t\t\t\taxios\r\n\t\t\t\t\t\t.get('https://secret-cliffs-71597.herokuapp.com/api/persons')\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tconsole.log('resposne data is', response.data);\r\n\t\t\t\t\t\t\tname = response.data[id].name;\r\n\t\t\t\t\t\t\tconsole.log('name is', name);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tconsole.log('error finding the name');\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetErrorMessage(`Information of ${name} is already removed from the server, or some other error`);\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t// How do I force a rerender on this deleting?\r\n\t\t// When I create a new entry it is added to the database but trying to deleting it fails because the reference to the id is not there for some reason.\r\n\t\t// Okay so now the only problem is that new entries don't have a defined id. Does that mean I need to do a get request on creation?\r\n\t};\r\n\r\n\tconst renderPersons = function() {\r\n\t\tconsole.log('triggers render persons');\r\n\r\n\t\tlet filteredPersons;\r\n\r\n\t\t// Truthy if non empty string.\r\n\t\tif (filter.length) {\r\n\t\t\tfilteredPersons = persons.filter((person) => {\r\n\t\t\t\treturn person.name.includes(filter);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfilteredPersons = persons;\r\n\t\t}\r\n\r\n\t\t// If the filter is empty, then just map like normal.\r\n\t\treturn filteredPersons.map((person) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={person.name}>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{person.name} {person.number}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<button onClick={() => handleDeleteClick(person.id)}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h2>Phonebook</h2>\r\n\r\n\t\t\t<Notification message={errorMessage} />\r\n\r\n\t\t\t<Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n\t\t\t<AddContact\r\n\t\t\t\thandleFormSubmit={handleFormSubmit}\r\n\t\t\t\tnewName={newName}\r\n\t\t\t\thandleNameChange={handleNameChange}\r\n\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\thandleNumberChange={handleNumberChange}\r\n\t\t\t/>\r\n\t\t\t<NumbersList renderPersons={renderPersons} />\r\n\t\t\t<div>debug {newName}</div>\r\n\t\t\t<div>debug {newNumber}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}